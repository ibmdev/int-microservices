buildscript {
  repositories {
  mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.6.RELEASE"
  }
}

plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}
ext.javaVer =  project.hasProperty('javaVer') ? project.getProperty('javaVer') : '1.8'

group = 'fr.sma.sy'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = javaVer
targetCompatibility = javaVer

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'junit:junit:4.13'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
	useJUnit()
	testLogging.showStandardStreams = true
	minHeapSize = "128m"
	maxHeapSize = "512m"
	jvmArgs '-XX:MaxPermSize=256m'
	beforeTest { descriptor ->
		// logger.lifecycle("Running test: " + descriptor)
	}
	failFast = true
	onOutput { descriptor, event ->
		// logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
	}


}
apply plugin: "org.springframework.boot"
